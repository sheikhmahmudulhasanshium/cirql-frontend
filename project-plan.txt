Changelog - v1.2.2 (2024-06-30)
minor Update
ui update for contact and admin panel


To-Do: Create "My Activity" Dashboard for Users
Goal: Give users a personal dashboard where they can see their own activity on the platform, like a "digital footprint." This will include stats like login frequency and total interactions, shown with cool charts and graphs.
Phase 1: Start Recording User Actions (Backend Only)
(This phase is completely invisible to users and has zero impact on the UI. It's the "data collection" step.)
Plan:
Create an "Activity Log" in the Database: Build a new, separate table (schema) in the database just for recording simple user actions.
Start Logging Key Events: In the backend code, add a single line of code to the "Activity Log" every time a user does something important, like:
Logging in.
Sending a message.
Viewing a profile.
Result: The application will begin silently and efficiently collecting activity data in the background.
Phase 2: Build the User-Facing Dashboard (Future Feature)
(This is the phase where we build the actual page for the user to see.)
Plan:
Build a "Data Summarizer" on the Backend: Create a new API endpoint (e.g., /users/me/activity) that can quickly count and summarize the raw data from the "Activity Log" for a specific user. It will return simple numbers, like { "loginsLast30Days": 10, "messagesSent": 55 }.
Design the "My Activity" Page: On the frontend, create a new page where users can see their stats.
Add Charts: Use the Recharts library (which is already in the project) to turn the summarized numbers from the API into nice-looking bar charts and graphs.
Result: A beautiful, engaging "My Activity" page where users can visualize their own engagement on the platform, similar to features on sites like YouTube or Facebook.

ignore for now
To-Do: Add "Talking Feedback" for Settings Toggles
Goal: When a user with a screen reader flips a switch in their settings (like "Dark Mode" or "Private Account"), we want the website to announce the change out loud, for example, "Dark mode enabled."
Plan:
Create an "Announcer" Component: Build a special, invisible component that can speak messages to screen readers.
Add it to the Settings Page: Place this Announcer component on the settings page so it's ready to work.
Connect the Toggles: Update the logic for the settings toggles. When a switch is flipped, tell the Announcer what to say.
User Control: The Announcer will only speak if the "Screen Reader Support" switch is turned ON in the user's settings. If it's off, it will stay silent.
Result: This will make the settings page much more accessible and user-friendly for visually impaired users without changing the website's appearance or SEO.